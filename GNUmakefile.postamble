# Oolite-linux
# GNUmakefile.postamble: Runs after-compilation scripts.
# These copy all the base data files into where oolite expects them
# to live (Contents/Resources)
#
CP_FLAGS                         = -rf

ifeq ($(debug),yes)
    EXT                          =.dbg
endif
                                 
ifeq ($(findstring -gnu,$(GNUSTEP_HOST_OS)),-gnu)
    CP_FLAGS                     += -u
endif

ifeq ($(GNUSTEP_HOST_OS),mingw32)
    OS_EXT                       = .exe
    CP_FLAGS                     += -u
endif

SRC_BIN                          = $(OBJC_PROGRAM_NAME)$(OS_EXT)
DEST_BIN                         = $(OBJC_PROGRAM_NAME)$(EXT)$(OS_EXT)

PROGDIR=$(OBJC_PROGRAM_NAME).app

after-all:: 
	$(MKDIRS) $(PROGDIR)
	$(MKDIRS) $(PROGDIR)/Resources
	$(CP) $(CP_FLAGS) Resources $(PROGDIR)
	$(CP) $(CP_FLAGS) Schemata $(PROGDIR)/Resources
ifeq ($(ESPEAK),yes)
    ifeq ($(GNUSTEP_HOST_OS),mingw32)
		$(CP) $(CP_FLAGS) deps/Cross-platform-deps/espeak-data $(PROGDIR)/Resources
    else
        ifeq ($(use_deps),yes)
			$(CP) $(CP_FLAGS) deps/Cross-platform-deps/espeak-data $(PROGDIR)/Resources
        endif
    endif
endif
	$(CP) $(CP_FLAGS) src/Cocoa/Info-Oolite.plist $(PROGDIR)/Resources/Info-gnustep.plist
	$(CP) $(CP_FLAGS) $(GNUSTEP_OBJ_DIR_NAME)/$(SRC_BIN) $(PROGDIR)/$(DEST_BIN)
ifeq ($(debug),no)
	$(STRIP) $(PROGDIR)/$(DEST_BIN)
endif
ifeq ($(GNUSTEP_HOST_OS),mingw32)
	$(CP) $(CP_FLAGS) deps/Windows-x86-deps/DLLs/*.dll $(PROGDIR)
ifeq ($(debug),yes)
	$(RM) $(PROGDIR)/js32ECMAv5.dll
else
	$(RM) $(PROGDIR)/js32ECMAv5dbg.dll
endif
endif

after-clean::
	$(RM) -rf $(GNUSTEP_OBJ_DIR_BASENAME) $(addprefix $(GNUSTEP_OBJ_DIR_BASENAME), .spk .dbg .spk.dbg)
